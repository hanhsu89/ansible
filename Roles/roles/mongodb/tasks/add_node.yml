---
#=== Setup MongoDB
- name: Install percona-server-mongodb | Debian
  include: install_debian.yml
  when: ansible_os_family == 'Debian'

- name: Install percona-server-mongodb | RedHat
  include: install_redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Tune MongoDB
  include: tuning.yml

- name: Stop MongoDB Service
  service:
    name: mongod
    state: stopped


#=== Setup Replicaset
- name: Update the /etc/hosts file with nodes name
  lineinfile:
    dest: "/etc/hosts"
    regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
    backup: yes
  with_items: "{{groups['mongodb']}}"

- name: Enable Replicaset on nodes
  lineinfile: 
    dest: "/etc/mongod.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^#replication:', line: 'replication:' }
    - { regexp: '^#  replSetName: mongodb-rs', line: '  replSetName: {{ replicaSetName }}' }

- name: Start MongoDB Service
  service:
    name: mongod
    state: started
    enabled: yes
    daemon_reload: true

- name: Copy script initiate replicaset to MASTER node
  template: 
    src: replSetInit.j2
    dest: /tmp/replSetInit.js
  when: primary and primary is defined

- name: Initialize the replicaset on MASTER node
  command: mongo -port {{ mongodb_port }} /tmp/replSetInit.js
  when: primary and primary is defined